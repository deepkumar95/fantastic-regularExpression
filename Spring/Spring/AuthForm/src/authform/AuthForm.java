/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package authform;

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Deep Kumar
 */
public class AuthForm extends javax.swing.JFrame {

    /**
     * Creates new form AuthForm
     */
    public AuthForm() {
        initComponents();
        userName.setText("");
        email.setText("");
        password.setText("");
        mobileNo.setText("");
        warn1.setVisible(false);
        warn2.setVisible(false);
        warn3.setVisible(false);
        warn4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        userName = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mobileNo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        warn1 = new javax.swing.JLabel();
        warn2 = new javax.swing.JLabel();
        warn3 = new javax.swing.JLabel();
        warn4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Username:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 48, 59, 20));
        jPanel1.add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 48, 410, -1));
        jPanel1.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 140, 413, -1));

        jLabel2.setText("Password:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 140, 59, 20));
        jPanel1.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 94, 410, -1));

        jLabel3.setText("Email:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 94, 59, 20));
        jPanel1.add(mobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 186, 413, -1));

        jLabel4.setText("MobileNo:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 186, 59, 20));

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        jPanel1.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 232, 413, -1));

        warn1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warn1.setForeground(new java.awt.Color(255, 0, 0));
        warn1.setText("Invalid username!");
        jPanel1.add(warn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 74, 124, -1));

        warn2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warn2.setForeground(new java.awt.Color(255, 0, 0));
        warn2.setText("Invalid mail id!");
        jPanel1.add(warn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 120, 202, -1));

        warn3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warn3.setForeground(new java.awt.Color(255, 0, 0));
        warn3.setText("must contains a-z, A-Z and 0-9 and any $ #@ etc.");
        jPanel1.add(warn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 166, -1, -1));

        warn4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        warn4.setForeground(new java.awt.Color(255, 0, 0));
        warn4.setText("Invalid mobile number!");
        jPanel1.add(warn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 212, 276, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String username=userName.getText();
        String mail=email.getText();
        String pwd=password.getText();
        String mobileno=mobileNo.getText();
        if(username.equals("")){
            warn1.setVisible(true);
        }
        else{
            
            //line below is the regular expression for checking the name is valid or not
            
            Pattern p=Pattern.compile("[a-zA-z\\s][a-zA-Z\\s]+");
            Matcher m=p.matcher(username);
            if(m.find() && m.group().equals(username)){
                
               //this line below is for the verfication purpose name is valid or not
                
               // JOptionPane.showMessageDialog(this, "This is valid name");
                warn1.setVisible(false);
                if(mail.equals("")){
                    warn2.setVisible(true);
                }
                else{
                    
                    // line below is the regular expression for checking the valid mail id or not
                    
                    Pattern p1=Pattern.compile("[a-zA-Z0-9][a-zA-Z0-9]*@[a-zA-Z0-9]+[.][a-zA-Z]+");
                    Matcher m1=p1.matcher(mail);
                    if(m1.find() && m1.group().equals(mail)){
                        
                       // the line below  for the verfication purpose mail is valid or not
                       
                       // JOptionPane.showMessageDialog(this, "This is the valid mail");
                        warn2.setVisible(false);
                        if(pwd.equals("")){
                            warn3.setText("must contains a-z, A-Z and 0-9 and any $ #@ etc.");
                            warn3.setVisible(true);
                        }
                        else{
                            if(pwd.length()>=6){
                                // line below is the regular expression for checking password valid or not
                                
                                Pattern p2=Pattern.compile("[a-zA-Z0-9]+[#@$]+[a-zA-Z0-9$#@]*");
                                Matcher m2=p2.matcher(pwd);
                                if(m2.find() && m2.group().equals(pwd)){
                                    
                                   //JOptionPane.showMessageDialog(this, "This is valid password");
                                   warn3.setVisible(false);
                                   if(mobileno.equals("")){
                                       warn4.setVisible(true);
                                   }
                                   else{
                                       // line below is the regular expression for checking valid mobile no.
                                       
                                       Pattern p3=Pattern.compile("(0|91)?[789][0-9]{9}");
                                       Matcher m3=p3.matcher(mobileno);
                                       if(m3.find() && m3.group().equals(mobileno)){
                                           //JOptionPane.showMessageDialog(this, "This is valid mobile no.");
                                           warn4.setVisible(false);
                                           JOptionPane.showMessageDialog(this, "Form Submitted Successfully");
                                       }
                                       else{
                                           warn4.setVisible(true);
                                       }
                                   }
                                }
                                else{
                                    warn3.setText("must contains a-z, A-Z and 0-9 and any $ #@ etc.");
                                    warn3.setVisible(true);
                                }
                            }
                            else{
                                warn3.setText("allowed password length is 6-9");
                                warn3.setVisible(true);
                            }
                        }
                    }
                    else{
                        warn2.setVisible(true);
                    }
                }
            }
            else{
                warn1.setVisible(true);
            }
       
            
// this logic is for checking whether the textfield is empty or not not if empty then aware the user to fill something
//       if(username.equals("")){
//           warn.setVisible(true)
//       }
//       else{            
//            if(mail.equals("")){
//                warn2.setVisible(true);
//                warn1.setVisible(false);
//            }
//            else{
//                if(pwd.equals("")){
//                    warn3.setVisible(true);
//                    warn1.setVisible(false);
//                    warn2.setVisible(false);
//                }
//                else{
//                    if(mobileno.equals("")){
//                          warn4.setVisible(true);
//                          warn1.setVisible(false);
//                          warn2.setVisible(false);
//                          warn3.setVisible(false);
//                    }
//                }
//            }
//        }
    }
        
    }//GEN-LAST:event_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AuthForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mobileNo;
    private javax.swing.JTextField password;
    private javax.swing.JButton submit;
    private javax.swing.JTextField userName;
    private javax.swing.JLabel warn1;
    private javax.swing.JLabel warn2;
    private javax.swing.JLabel warn3;
    private javax.swing.JLabel warn4;
    // End of variables declaration//GEN-END:variables
}
